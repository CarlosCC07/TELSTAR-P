
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'INT BOOLEAN FLOAT END_LINE COMMA L_BRACE R_BRACE LEFT_PAR RIGHT_PAR L_BRACKET R_BRACKET LOGIC_OPERATOR COND_OPERATOR AS_OPERATOR MD_OPERATOR ASSIGN ID PRINT LINE ELSE DO TYPE_BOOLEAN RETURN DOT WHILE TYPE_INT TYPE_FLOAT IF PROGRAM CURVE CALL DEFINEprogram : PROGRAM ID END_LINE global_variable_dec function_dec L_BRACE code_statute R_BRACEempty : global_variable_dec : vd_2 END_LINE\n                      | emptyvd_2 : type ID variable_dec_multivariable_dec_multi : COMMA vd_2\n                            | emptylocal_var_dec : type ID local_multivar_dec END_LINElocal_multivar_dec : COMMA local_var_dec\n                            | emptycode_statute : statute code_statute\n                      | emptytype : TYPE_INT array_dec\n              | TYPE_FLOAT array_dec\n              | TYPE_BOOLEAN array_decdata : INT\n              | FLOAT\n              | BOOLEANarray_dec : L_BRACKET INT R_BRACKET\n                   | emptyfunction_dec : DEFINE type ID LEFT_PAR params RIGHT_PAR L_BRACE code_statute R_BRACE\n                      | emptyfunction_call : CALL ID LEFT_PAR exp cm_2 RIGHT_PAR END_LINEcm_2 : COMMA call_multi\n              | emptycall_multi : exp cm_2\n                    | emptyparams : type ID  param_array params_multi\n                | emptyparam_array : L_BRACKET exp R_BRACKET\n                     | emptyparams_multi : COMMA params\n                      | emptystatute : assign_statute\n                 | if_statute\n                 | while_statute\n                 | do_while_statute\n                 | return_statute\n                 | print_statute\n                 | draw_statute\n                 | local_var_dec\n                 | function_callassign_statute : ID array_assign_statute ASSIGN logical_exp END_LINEarray_assign_statute : L_BRACKET exp R_BRACKET\n                              | emptyif_statute : IF LEFT_PAR logical_exp RIGHT_PAR L_BRACE code_statute R_BRACE if_else END_LINEif_else : ELSE L_BRACE code_statute R_BRACE\n                 | emptywhile_statute : WHILE LEFT_PAR logical_exp RIGHT_PAR L_BRACE code_statute R_BRACE END_LINEdo_while_statute : DO L_BRACE code_statute R_BRACE WHILE LEFT_PAR logical_exp RIGHT_PAR END_LINEreturn_statute : RETURN logical_exp END_LINEprint_statute : PRINT LEFT_PAR logical_exp multi_print_statute RIGHT_PAR END_LINEmulti_print_statute : COMMA logical_exp print_2\n                             | emptyprint_2 : multi_print_statutedraw_statute : draw_point\n                      | draw_line\n                      | draw_curvedraw_point : DOT LEFT_PAR logical_exp COMMA logical_exp point_extra_1 RIGHT_PAR END_LINEpoint_extra_1 : COMMA logical_exp point_extra_2\n                       | emptypoint_extra_2 : COMMA logical_exp\n                       | emptydraw_line : LINE LEFT_PAR logical_exp COMMA logical_exp COMMA logical_exp line_extra_1 RIGHT_PAR END_LINEline_extra_1 : COMMA logical_exp line_extra_2\n                      | emptyline_extra_2 : COMMA logical_exp\n                      | emptydraw_curve : CURVE LEFT_PAR logical_exp COMMA logical_exp COMMA logical_exp COMMA logical_exp curve_extra_1 RIGHT_PAR END_LINEcurve_extra_1 : COMMA logical_exp curve_extra_2\n                       | emptycurve_extra_2 : COMMA logical_exp\n                       | emptylogical_exp : cond_exp logical_exp_2logical_exp_2 : LOGIC_OPERATOR cond_exp\n                       | emptycond_exp : exp cond_exp_2cond_exp_2 : COND_OPERATOR exp\n                    | emptyexp : term exp_2exp_2 : AS_OPERATOR term\n               | emptyterm : factor term_2term_2 : MD_OPERATOR factor\n                | emptyfactor : LEFT_PAR logical_exp RIGHT_PAR\n                | factor_2 const_varfactor_2 : AS_OPERATOR\n                  | emptyconst_var : data\n                   | id_operid_oper : ID id_oper_2id_oper_2 : L_BRACKET exp R_BRACKET\n                   | LEFT_PAR id_oper_3 RIGHT_PAR\n                   | emptyid_oper_3 : exp id_oper_multi\n                   | emptyid_oper_multi : COMMA exp id_multi_2\n                   | emptyid_multi_2 : id_oper_multi'
    
_lr_action_items = {'PRINT':([23,29,32,33,35,37,40,41,43,46,47,49,51,54,59,100,127,146,149,152,158,171,199,211,212,217,218,219,230,238,],[36,-42,-36,-40,-37,-39,-56,-57,-38,-34,-58,-35,36,-41,36,-51,-8,36,36,-43,36,-52,-23,-49,-59,-50,-46,36,-64,-69,]),'CURVE':([23,29,32,33,35,37,40,41,43,46,47,49,51,54,59,100,127,146,149,152,158,171,199,211,212,217,218,219,230,238,],[30,-42,-36,-40,-37,-39,-56,-57,-38,-34,-58,-35,30,-41,30,-51,-8,30,30,-43,30,-52,-23,-49,-59,-50,-46,30,-64,-69,]),'DO':([23,29,32,33,35,37,40,41,43,46,47,49,51,54,59,100,127,146,149,152,158,171,199,211,212,217,218,219,230,238,],[31,-42,-36,-40,-37,-39,-56,-57,-38,-34,-58,-35,31,-41,31,-51,-8,31,31,-43,31,-52,-23,-49,-59,-50,-46,31,-64,-69,]),'COMMA':([18,62,67,68,71,73,84,87,93,95,96,98,99,102,103,106,107,108,109,110,111,112,113,114,116,118,131,132,133,134,135,138,139,142,143,145,147,151,153,154,159,178,179,185,189,191,194,195,198,216,220,231,],[26,88,-2,-2,-2,-2,120,124,130,-79,-77,-82,-80,-83,-85,-74,-76,-2,-18,-91,-17,-90,-16,-87,141,-2,-78,-81,-84,-86,-75,-92,-95,161,163,-31,168,124,174,175,182,-94,-93,161,-30,201,206,175,214,223,227,235,]),'ELSE':([193,],[205,]),'LINE':([23,29,32,33,35,37,40,41,43,46,47,49,51,54,59,100,127,146,149,152,158,171,199,211,212,217,218,219,230,238,],[42,-42,-36,-40,-37,-39,-56,-57,-38,-34,-58,-35,42,-41,42,-51,-8,42,42,-43,42,-52,-23,-49,-59,-50,-46,42,-64,-69,]),'BOOLEAN':([44,58,60,61,63,66,70,72,74,75,76,77,92,94,97,101,105,117,120,124,130,136,137,141,144,156,161,168,169,174,175,182,187,201,206,214,223,227,235,],[-2,-2,-2,-2,-2,-2,-89,-2,109,-88,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-89,-2,-2,-2,-2,-2,-2,-89,-2,-2,-2,-2,-2,-2,]),'DOT':([23,29,32,33,35,37,40,41,43,46,47,49,51,54,59,100,127,146,149,152,158,171,199,211,212,217,218,219,230,238,],[48,-42,-36,-40,-37,-39,-56,-57,-38,-34,-58,-35,48,-41,48,-51,-8,48,48,-43,48,-52,-23,-49,-59,-50,-46,48,-64,-69,]),'R_BRACE':([23,29,32,33,35,37,40,41,43,46,47,49,51,52,53,54,59,79,85,100,127,146,149,152,158,167,170,171,180,199,211,212,217,218,219,226,230,238,],[-2,-42,-36,-40,-37,-39,-56,-57,-38,-34,-58,-35,-2,-12,80,-41,-2,-11,121,-51,-8,-2,-2,-43,-2,190,193,-52,196,-23,-49,-59,-50,-46,-2,233,-64,-69,]),'COND_OPERATOR':([67,68,71,98,99,102,103,108,109,110,111,112,113,114,132,133,134,138,139,178,179,],[94,-2,-2,-82,-80,-83,-85,-2,-18,-91,-17,-90,-16,-87,-81,-84,-86,-92,-95,-94,-93,]),'L_BRACKET':([6,10,11,39,108,118,],[16,16,16,63,137,144,]),'RETURN':([23,29,32,33,35,37,40,41,43,46,47,49,51,54,59,100,127,146,149,152,158,171,199,211,212,217,218,219,230,238,],[44,-42,-36,-40,-37,-39,-56,-57,-38,-34,-58,-35,44,-41,44,-51,-8,44,44,-43,44,-52,-23,-49,-59,-50,-46,44,-64,-69,]),'TYPE_INT':([4,12,23,26,29,32,33,35,37,40,41,43,46,47,49,51,54,57,59,88,100,127,146,149,152,158,163,171,199,211,212,217,218,219,230,238,],[11,11,11,11,-42,-36,-40,-37,-39,-56,-57,-38,-34,-58,-35,11,-41,11,11,11,-51,-8,11,11,-43,11,11,-52,-23,-49,-59,-50,-46,11,-64,-69,]),'WHILE':([23,29,32,33,35,37,40,41,43,46,47,49,51,54,59,100,121,127,146,149,152,158,171,199,211,212,217,218,219,230,238,],[45,-42,-36,-40,-37,-39,-56,-57,-38,-34,-58,-35,45,-41,45,-51,148,-8,45,45,-43,45,-52,-23,-49,-59,-50,-46,45,-64,-69,]),'$end':([2,80,],[0,-1,]),'AS_OPERATOR':([44,58,60,61,63,66,68,71,72,76,77,92,94,97,101,102,103,105,108,109,110,111,112,113,114,117,120,124,130,133,134,136,137,138,139,141,144,161,168,169,174,175,178,179,182,201,206,214,223,227,235,],[75,75,75,75,75,75,97,-2,75,75,75,75,75,75,75,-83,-85,75,-2,-18,-91,-17,-90,-16,-87,75,75,75,75,-84,-86,75,75,-92,-95,75,75,75,75,75,75,75,-94,-93,75,75,75,75,75,75,75,]),'ID':([1,6,8,10,11,15,17,20,21,22,23,29,32,33,35,37,38,40,41,43,44,46,47,49,50,51,54,55,58,59,60,61,63,66,70,72,74,75,76,77,81,92,94,97,100,101,105,117,120,124,127,130,136,137,141,144,146,149,152,156,158,161,168,169,171,174,175,182,187,199,201,206,211,212,214,217,218,219,223,227,230,235,238,],[3,-2,18,-2,-2,-14,-20,-15,-13,28,39,-42,-36,-40,-37,-39,62,-56,-57,-38,-2,-34,-58,-35,78,39,-41,-19,-2,39,-2,-2,-2,-2,-89,-2,108,-88,-2,-2,118,-2,-2,-2,-51,-2,-2,-2,-2,-2,-8,-2,-2,-2,-2,-2,39,39,-43,-89,39,-2,-2,-2,-52,-2,-2,-2,-89,-23,-2,-2,-49,-59,-2,-50,-46,39,-2,-2,-64,-2,-69,]),'MD_OPERATOR':([71,108,109,110,111,112,113,114,134,138,139,178,179,],[101,-2,-18,-91,-17,-90,-16,-87,-86,-92,-95,-94,-93,]),'LOGIC_OPERATOR':([67,68,71,73,95,96,98,99,102,103,108,109,110,111,112,113,114,131,132,133,134,138,139,178,179,],[-2,-2,-2,105,-79,-77,-82,-80,-83,-85,-2,-18,-91,-17,-90,-16,-87,-78,-81,-84,-86,-92,-95,-94,-93,]),'PROGRAM':([0,],[1,]),'IF':([23,29,32,33,35,37,40,41,43,46,47,49,51,54,59,100,127,146,149,152,158,171,199,211,212,217,218,219,230,238,],[34,-42,-36,-40,-37,-39,-56,-57,-38,-34,-58,-35,34,-41,34,-51,-8,34,34,-43,34,-52,-23,-49,-59,-50,-46,34,-64,-69,]),'CALL':([23,29,32,33,35,37,40,41,43,46,47,49,51,54,59,100,127,146,149,152,158,171,199,211,212,217,218,219,230,238,],[50,-42,-36,-40,-37,-39,-56,-57,-38,-34,-58,-35,50,-41,50,-51,-8,50,50,-43,50,-52,-23,-49,-59,-50,-46,50,-64,-69,]),'INT':([16,44,58,60,61,63,66,70,72,74,75,76,77,92,94,97,101,105,117,120,124,130,136,137,141,144,156,161,168,169,174,175,182,187,201,206,214,223,227,235,],[24,-2,-2,-2,-2,-2,-2,-89,-2,113,-88,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-89,-2,-2,-2,-2,-2,-2,-89,-2,-2,-2,-2,-2,-2,]),'ASSIGN':([39,64,65,128,],[-2,92,-45,-44,]),'DEFINE':([4,5,7,19,],[-2,12,-4,-3,]),'LEFT_PAR':([28,30,34,36,42,44,45,48,58,60,61,63,66,72,76,77,78,92,94,97,101,105,108,117,120,124,130,136,137,141,144,148,161,168,169,174,175,182,201,206,214,223,227,235,],[57,58,60,61,66,72,76,77,72,72,72,72,72,72,72,72,117,72,72,72,72,72,136,72,72,72,72,72,72,72,72,169,72,72,72,72,72,72,72,72,72,72,72,72,]),'END_LINE':([3,9,18,25,27,56,62,67,68,69,71,73,89,90,95,96,98,99,102,103,106,107,108,109,110,111,112,113,114,126,127,129,131,132,133,134,135,138,139,150,178,179,184,193,196,197,202,203,204,221,232,233,],[4,19,-2,-5,-7,-6,-2,-2,-2,100,-2,-2,-10,127,-79,-77,-82,-80,-83,-85,-74,-76,-2,-18,-91,-17,-90,-16,-87,-9,-8,152,-78,-81,-84,-86,-75,-92,-95,171,-94,-93,199,-2,211,212,217,218,-48,230,238,-47,]),'R_BRACKET':([24,68,71,91,98,99,102,103,108,109,110,111,112,113,114,132,133,134,138,139,157,166,178,179,],[55,-2,-2,128,-82,-80,-83,-85,-2,-18,-91,-17,-90,-16,-87,-81,-84,-86,-92,-95,179,189,-94,-93,]),'TYPE_BOOLEAN':([4,12,23,26,29,32,33,35,37,40,41,43,46,47,49,51,54,57,59,88,100,127,146,149,152,158,163,171,199,211,212,217,218,219,230,238,],[10,10,10,10,-42,-36,-40,-37,-39,-56,-57,-38,-34,-58,-35,10,-41,10,10,10,-51,-8,10,10,-43,10,10,-52,-23,-49,-59,-50,-46,10,-64,-69,]),'FLOAT':([44,58,60,61,63,66,70,72,74,75,76,77,92,94,97,101,105,117,120,124,130,136,137,141,144,156,161,168,169,174,175,182,187,201,206,214,223,227,235,],[-2,-2,-2,-2,-2,-2,-89,-2,111,-88,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-89,-2,-2,-2,-2,-2,-2,-89,-2,-2,-2,-2,-2,-2,]),'RIGHT_PAR':([57,67,68,71,73,82,83,86,87,95,96,98,99,102,103,104,106,107,108,109,110,111,112,113,114,115,118,123,125,131,132,133,134,135,136,138,139,142,143,145,151,154,155,156,159,160,161,162,163,164,165,172,173,176,177,178,179,181,183,185,186,187,188,189,192,194,195,198,200,207,208,209,210,213,215,216,220,222,224,225,228,229,231,234,236,237,239,],[-2,-2,-2,-2,-2,119,-29,122,-2,-79,-77,-82,-80,-83,-85,134,-74,-76,-2,-18,-91,-17,-90,-16,-87,140,-2,150,-54,-78,-81,-84,-86,-75,-2,-92,-95,-2,-2,-31,-2,-2,178,-97,-2,184,-2,-25,-2,-33,-28,-53,-55,-96,-99,-94,-93,197,-61,-2,-24,-27,-32,-30,202,-2,-2,-2,-26,221,-66,-98,-100,-60,-63,-2,-2,-62,232,-71,-65,-68,-2,-67,-70,-73,-72,]),'TYPE_FLOAT':([4,12,23,26,29,32,33,35,37,40,41,43,46,47,49,51,54,57,59,88,100,127,146,149,152,158,163,171,199,211,212,217,218,219,230,238,],[6,6,6,6,-42,-36,-40,-37,-39,-56,-57,-38,-34,-58,-35,6,-41,6,6,6,-51,-8,6,6,-43,6,6,-52,-23,-49,-59,-50,-46,6,-64,-69,]),'L_BRACE':([4,5,7,13,14,19,31,119,122,140,190,205,],[-2,-2,-4,-22,23,-3,59,146,149,158,-21,219,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'exp':([44,58,60,61,63,66,72,76,77,92,94,105,117,120,124,130,136,137,141,144,161,168,169,174,175,182,201,206,214,223,227,235,],[67,67,67,67,91,67,67,67,67,67,131,67,142,67,67,67,154,157,67,166,185,67,67,67,195,67,67,67,67,67,67,67,]),'function_call':([23,51,59,146,149,158,219,],[29,29,29,29,29,29,29,]),'id_oper':([74,],[110,]),'cm_2':([142,185,],[160,200,]),'draw_statute':([23,51,59,146,149,158,219,],[33,33,33,33,33,33,33,]),'point_extra_1':([159,],[181,]),'factor':([44,58,60,61,63,66,72,76,77,92,94,97,101,105,117,120,124,130,136,137,141,144,161,168,169,174,175,182,201,206,214,223,227,235,],[71,71,71,71,71,71,71,71,71,71,71,71,133,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'exp_2':([68,],[99,]),'while_statute':([23,51,59,146,149,158,219,],[32,32,32,32,32,32,32,]),'vd_2':([4,26,],[9,56,]),'params':([57,163,],[82,188,]),'variable_dec_multi':([18,],[25,]),'array_assign_statute':([39,],[64,]),'do_while_statute':([23,51,59,146,149,158,219,],[35,35,35,35,35,35,35,]),'function_dec':([5,],[14,]),'term':([44,58,60,61,63,66,72,76,77,92,94,97,105,117,120,124,130,136,137,141,144,161,168,169,174,175,182,201,206,214,223,227,235,],[68,68,68,68,68,68,68,68,68,68,68,132,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'curve_extra_2':([231,],[236,]),'print_statute':([23,51,59,146,149,158,219,],[37,37,37,37,37,37,37,]),'call_multi':([161,],[186,]),'id_multi_2':([195,],[209,]),'curve_extra_1':([216,],[224,]),'global_variable_dec':([4,],[5,]),'type':([4,12,23,26,51,57,59,88,146,149,158,163,219,],[8,22,38,8,38,81,38,38,38,38,38,81,38,]),'params_multi':([143,],[165,]),'cond_exp':([44,58,60,61,66,72,76,77,92,105,120,124,130,141,168,169,174,182,201,206,214,223,227,235,],[73,73,73,73,73,73,73,73,73,135,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'data':([74,],[112,]),'point_extra_2':([198,],[213,]),'const_var':([74,],[114,]),'array_dec':([6,10,11,],[15,20,21,]),'print_2':([151,],[172,]),'draw_point':([23,51,59,146,149,158,219,],[40,40,40,40,40,40,40,]),'line_extra_1':([194,],[207,]),'id_oper_multi':([154,195,],[176,210,]),'multi_print_statute':([87,151,],[123,173,]),'draw_line':([23,51,59,146,149,158,219,],[41,41,41,41,41,41,41,]),'cond_exp_2':([67,],[96,]),'logical_exp':([44,58,60,61,66,72,76,77,92,120,124,130,141,168,169,174,182,201,206,214,223,227,235,],[69,84,86,87,93,104,115,116,129,147,151,153,159,191,192,194,198,216,220,222,231,234,239,]),'statute':([23,51,59,146,149,158,219,],[51,51,51,51,51,51,51,]),'if_else':([193,],[203,]),'return_statute':([23,51,59,146,149,158,219,],[43,43,43,43,43,43,43,]),'program':([0,],[2,]),'assign_statute':([23,51,59,146,149,158,219,],[46,46,46,46,46,46,46,]),'draw_curve':([23,51,59,146,149,158,219,],[47,47,47,47,47,47,47,]),'if_statute':([23,51,59,146,149,158,219,],[49,49,49,49,49,49,49,]),'id_oper_2':([108,],[138,]),'logical_exp_2':([73,],[106,]),'param_array':([118,],[143,]),'empty':([4,5,6,10,11,18,23,39,44,51,57,58,59,60,61,62,63,66,67,68,71,72,73,76,77,87,92,94,97,101,105,108,117,118,120,124,130,136,137,141,142,143,144,146,149,151,154,158,159,161,163,168,169,174,175,182,185,193,194,195,198,201,206,214,216,219,220,223,227,231,235,],[7,13,17,17,17,27,52,65,70,52,83,70,52,70,70,89,70,70,95,98,103,70,107,70,70,125,70,70,70,70,70,139,70,145,70,70,70,156,70,70,162,164,70,52,52,125,177,52,183,187,83,70,70,70,70,70,162,204,208,177,215,70,70,70,225,52,229,70,70,237,70,]),'line_extra_2':([220,],[228,]),'local_multivar_dec':([62,],[90,]),'factor_2':([44,58,60,61,63,66,72,76,77,92,94,97,101,105,117,120,124,130,136,137,141,144,161,168,169,174,175,182,201,206,214,223,227,235,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'id_oper_3':([136,],[155,]),'code_statute':([23,51,59,146,149,158,219,],[53,79,85,167,170,180,226,]),'term_2':([71,],[102,]),'local_var_dec':([23,51,59,88,146,149,158,219,],[54,54,54,126,54,54,54,54,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID END_LINE global_variable_dec function_dec L_BRACE code_statute R_BRACE','program',8,'p_program','TSP_Comp.py',131),
  ('empty -> <empty>','empty',0,'p_empty','TSP_Comp.py',149),
  ('global_variable_dec -> vd_2 END_LINE','global_variable_dec',2,'p_global_variable_dec','TSP_Comp.py',155),
  ('global_variable_dec -> empty','global_variable_dec',1,'p_global_variable_dec','TSP_Comp.py',156),
  ('vd_2 -> type ID variable_dec_multi','vd_2',3,'p_vd_2','TSP_Comp.py',159),
  ('variable_dec_multi -> COMMA vd_2','variable_dec_multi',2,'p_variable_dec_multi','TSP_Comp.py',162),
  ('variable_dec_multi -> empty','variable_dec_multi',1,'p_variable_dec_multi','TSP_Comp.py',163),
  ('local_var_dec -> type ID local_multivar_dec END_LINE','local_var_dec',4,'p_local_var_dec','TSP_Comp.py',166),
  ('local_multivar_dec -> COMMA local_var_dec','local_multivar_dec',2,'p_local_multivar_dec','TSP_Comp.py',169),
  ('local_multivar_dec -> empty','local_multivar_dec',1,'p_local_multivar_dec','TSP_Comp.py',170),
  ('code_statute -> statute code_statute','code_statute',2,'p_code_statute','TSP_Comp.py',175),
  ('code_statute -> empty','code_statute',1,'p_code_statute','TSP_Comp.py',176),
  ('type -> TYPE_INT array_dec','type',2,'p_type','TSP_Comp.py',193),
  ('type -> TYPE_FLOAT array_dec','type',2,'p_type','TSP_Comp.py',194),
  ('type -> TYPE_BOOLEAN array_dec','type',2,'p_type','TSP_Comp.py',195),
  ('data -> INT','data',1,'p_data','TSP_Comp.py',199),
  ('data -> FLOAT','data',1,'p_data','TSP_Comp.py',200),
  ('data -> BOOLEAN','data',1,'p_data','TSP_Comp.py',201),
  ('array_dec -> L_BRACKET INT R_BRACKET','array_dec',3,'p_array_dec','TSP_Comp.py',206),
  ('array_dec -> empty','array_dec',1,'p_array_dec','TSP_Comp.py',207),
  ('function_dec -> DEFINE type ID LEFT_PAR params RIGHT_PAR L_BRACE code_statute R_BRACE','function_dec',9,'p_function_dec','TSP_Comp.py',212),
  ('function_dec -> empty','function_dec',1,'p_function_dec','TSP_Comp.py',213),
  ('function_call -> CALL ID LEFT_PAR exp cm_2 RIGHT_PAR END_LINE','function_call',7,'p_function_call','TSP_Comp.py',217),
  ('cm_2 -> COMMA call_multi','cm_2',2,'p_cm_2','TSP_Comp.py',220),
  ('cm_2 -> empty','cm_2',1,'p_cm_2','TSP_Comp.py',221),
  ('call_multi -> exp cm_2','call_multi',2,'p_call_multi','TSP_Comp.py',224),
  ('call_multi -> empty','call_multi',1,'p_call_multi','TSP_Comp.py',225),
  ('params -> type ID param_array params_multi','params',4,'p_params','TSP_Comp.py',228),
  ('params -> empty','params',1,'p_params','TSP_Comp.py',229),
  ('param_array -> L_BRACKET exp R_BRACKET','param_array',3,'p_param_array','TSP_Comp.py',236),
  ('param_array -> empty','param_array',1,'p_param_array','TSP_Comp.py',237),
  ('params_multi -> COMMA params','params_multi',2,'p_params_multi','TSP_Comp.py',240),
  ('params_multi -> empty','params_multi',1,'p_params_multi','TSP_Comp.py',241),
  ('statute -> assign_statute','statute',1,'p_statute','TSP_Comp.py',250),
  ('statute -> if_statute','statute',1,'p_statute','TSP_Comp.py',251),
  ('statute -> while_statute','statute',1,'p_statute','TSP_Comp.py',252),
  ('statute -> do_while_statute','statute',1,'p_statute','TSP_Comp.py',253),
  ('statute -> return_statute','statute',1,'p_statute','TSP_Comp.py',254),
  ('statute -> print_statute','statute',1,'p_statute','TSP_Comp.py',255),
  ('statute -> draw_statute','statute',1,'p_statute','TSP_Comp.py',256),
  ('statute -> local_var_dec','statute',1,'p_statute','TSP_Comp.py',257),
  ('statute -> function_call','statute',1,'p_statute','TSP_Comp.py',258),
  ('assign_statute -> ID array_assign_statute ASSIGN logical_exp END_LINE','assign_statute',5,'p_assign_statute','TSP_Comp.py',262),
  ('array_assign_statute -> L_BRACKET exp R_BRACKET','array_assign_statute',3,'p_array_assign_statute','TSP_Comp.py',265),
  ('array_assign_statute -> empty','array_assign_statute',1,'p_array_assign_statute','TSP_Comp.py',266),
  ('if_statute -> IF LEFT_PAR logical_exp RIGHT_PAR L_BRACE code_statute R_BRACE if_else END_LINE','if_statute',9,'p_if_statute','TSP_Comp.py',271),
  ('if_else -> ELSE L_BRACE code_statute R_BRACE','if_else',4,'p_if_else','TSP_Comp.py',274),
  ('if_else -> empty','if_else',1,'p_if_else','TSP_Comp.py',275),
  ('while_statute -> WHILE LEFT_PAR logical_exp RIGHT_PAR L_BRACE code_statute R_BRACE END_LINE','while_statute',8,'p_while_statute','TSP_Comp.py',280),
  ('do_while_statute -> DO L_BRACE code_statute R_BRACE WHILE LEFT_PAR logical_exp RIGHT_PAR END_LINE','do_while_statute',9,'p_do_while_statute','TSP_Comp.py',285),
  ('return_statute -> RETURN logical_exp END_LINE','return_statute',3,'p_return_statute','TSP_Comp.py',290),
  ('print_statute -> PRINT LEFT_PAR logical_exp multi_print_statute RIGHT_PAR END_LINE','print_statute',6,'p_print_statute','TSP_Comp.py',295),
  ('multi_print_statute -> COMMA logical_exp print_2','multi_print_statute',3,'p_multi_print_statute','TSP_Comp.py',298),
  ('multi_print_statute -> empty','multi_print_statute',1,'p_multi_print_statute','TSP_Comp.py',299),
  ('print_2 -> multi_print_statute','print_2',1,'p_print_2','TSP_Comp.py',302),
  ('draw_statute -> draw_point','draw_statute',1,'p_draw_statute','TSP_Comp.py',307),
  ('draw_statute -> draw_line','draw_statute',1,'p_draw_statute','TSP_Comp.py',308),
  ('draw_statute -> draw_curve','draw_statute',1,'p_draw_statute','TSP_Comp.py',309),
  ('draw_point -> DOT LEFT_PAR logical_exp COMMA logical_exp point_extra_1 RIGHT_PAR END_LINE','draw_point',8,'p_draw_point','TSP_Comp.py',314),
  ('point_extra_1 -> COMMA logical_exp point_extra_2','point_extra_1',3,'p_point_extra_1','TSP_Comp.py',317),
  ('point_extra_1 -> empty','point_extra_1',1,'p_point_extra_1','TSP_Comp.py',318),
  ('point_extra_2 -> COMMA logical_exp','point_extra_2',2,'p_point_extra_2','TSP_Comp.py',321),
  ('point_extra_2 -> empty','point_extra_2',1,'p_point_extra_2','TSP_Comp.py',322),
  ('draw_line -> LINE LEFT_PAR logical_exp COMMA logical_exp COMMA logical_exp line_extra_1 RIGHT_PAR END_LINE','draw_line',10,'p_draw_line','TSP_Comp.py',327),
  ('line_extra_1 -> COMMA logical_exp line_extra_2','line_extra_1',3,'p_line_extra_1','TSP_Comp.py',330),
  ('line_extra_1 -> empty','line_extra_1',1,'p_line_extra_1','TSP_Comp.py',331),
  ('line_extra_2 -> COMMA logical_exp','line_extra_2',2,'p_line_extra_2','TSP_Comp.py',334),
  ('line_extra_2 -> empty','line_extra_2',1,'p_line_extra_2','TSP_Comp.py',335),
  ('draw_curve -> CURVE LEFT_PAR logical_exp COMMA logical_exp COMMA logical_exp COMMA logical_exp curve_extra_1 RIGHT_PAR END_LINE','draw_curve',12,'p_draw_curve','TSP_Comp.py',340),
  ('curve_extra_1 -> COMMA logical_exp curve_extra_2','curve_extra_1',3,'p_curve_extra_1','TSP_Comp.py',343),
  ('curve_extra_1 -> empty','curve_extra_1',1,'p_curve_extra_1','TSP_Comp.py',344),
  ('curve_extra_2 -> COMMA logical_exp','curve_extra_2',2,'p_curve_extra_2','TSP_Comp.py',347),
  ('curve_extra_2 -> empty','curve_extra_2',1,'p_curve_extra_2','TSP_Comp.py',348),
  ('logical_exp -> cond_exp logical_exp_2','logical_exp',2,'p_logical_exp','TSP_Comp.py',352),
  ('logical_exp_2 -> LOGIC_OPERATOR cond_exp','logical_exp_2',2,'p_logical_exp_2','TSP_Comp.py',355),
  ('logical_exp_2 -> empty','logical_exp_2',1,'p_logical_exp_2','TSP_Comp.py',356),
  ('cond_exp -> exp cond_exp_2','cond_exp',2,'p_cond_exp','TSP_Comp.py',361),
  ('cond_exp_2 -> COND_OPERATOR exp','cond_exp_2',2,'p_cond_exp_2','TSP_Comp.py',364),
  ('cond_exp_2 -> empty','cond_exp_2',1,'p_cond_exp_2','TSP_Comp.py',365),
  ('exp -> term exp_2','exp',2,'p_exp','TSP_Comp.py',370),
  ('exp_2 -> AS_OPERATOR term','exp_2',2,'p_exp_2','TSP_Comp.py',373),
  ('exp_2 -> empty','exp_2',1,'p_exp_2','TSP_Comp.py',374),
  ('term -> factor term_2','term',2,'p_term','TSP_Comp.py',379),
  ('term_2 -> MD_OPERATOR factor','term_2',2,'p_term_2','TSP_Comp.py',382),
  ('term_2 -> empty','term_2',1,'p_term_2','TSP_Comp.py',383),
  ('factor -> LEFT_PAR logical_exp RIGHT_PAR','factor',3,'p_factor','TSP_Comp.py',388),
  ('factor -> factor_2 const_var','factor',2,'p_factor','TSP_Comp.py',389),
  ('factor_2 -> AS_OPERATOR','factor_2',1,'p_factor_2','TSP_Comp.py',392),
  ('factor_2 -> empty','factor_2',1,'p_factor_2','TSP_Comp.py',393),
  ('const_var -> data','const_var',1,'p_const_var','TSP_Comp.py',398),
  ('const_var -> id_oper','const_var',1,'p_const_var','TSP_Comp.py',399),
  ('id_oper -> ID id_oper_2','id_oper',2,'p_id_oper','TSP_Comp.py',404),
  ('id_oper_2 -> L_BRACKET exp R_BRACKET','id_oper_2',3,'p_id_oper_2','TSP_Comp.py',407),
  ('id_oper_2 -> LEFT_PAR id_oper_3 RIGHT_PAR','id_oper_2',3,'p_id_oper_2','TSP_Comp.py',408),
  ('id_oper_2 -> empty','id_oper_2',1,'p_id_oper_2','TSP_Comp.py',409),
  ('id_oper_3 -> exp id_oper_multi','id_oper_3',2,'p_id_oper_3','TSP_Comp.py',412),
  ('id_oper_3 -> empty','id_oper_3',1,'p_id_oper_3','TSP_Comp.py',413),
  ('id_oper_multi -> COMMA exp id_multi_2','id_oper_multi',3,'p_id_oper_multi','TSP_Comp.py',416),
  ('id_oper_multi -> empty','id_oper_multi',1,'p_id_oper_multi','TSP_Comp.py',417),
  ('id_multi_2 -> id_oper_multi','id_multi_2',1,'p_id_multi_2','TSP_Comp.py',420),
]
