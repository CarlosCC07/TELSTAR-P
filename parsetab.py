
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ID INT FLOAT BOOLEAN END_LINE COMMA AS_OPERATOR MD_OPERATOR LOGIC_OPERATOR AO_OPERATOR ASSIGN L_BRACKET R_BRACKET L_PAR R_PAR BRACES DO RETURN TYPE_INT TYPE_VOID TYPE_FLOAT ELSE TYPE_BOOLEAN IF WHILE PRINT INPUT MAINprogram : program_2 inicioMain BRACES code_statute BRACESinicioMain : MAINprogram_2 : type ID program_aux program_2\n                   | program_aux : variable_dec\n                   | function_deccode_statute : statute code_statute\n                      | statute : print_statute\n                  | ID statute_2\n                  | if_statute\n                  | while_statute\n                  | do_while_statute\n                  | type ID variable_decstatute_2 : L_PAR const_id_3 R_PAR END_LINE\n                   | assign_statute ASSIGN statute_auxstatute_aux : input_statute\n                   | assign_statute_aux END_LINEfunction_dec : function_id function_call code_statute return_statute BRACESfunction_id : L_PAR function_id_2 R_PARfunction_id_2 : type params_id function_id_aux function_id_3\n                    | function_id_3 : param_aux function_id_2\n                    | function_id_aux : L_BRACKET exp R_BRACKET\n                    | params_id : IDparam_aux : COMMAfunction_call : BRACESreturn_statute : RETURN return_statute_aux END_LINEreturn_statute_aux : const_var\n                        | variable_dec : variable_dec_2 END_LINEvariable_dec_2 : variable_dec_3 variable_dec_auxvariable_dec_3 : L_BRACKET exp R_BRACKET\n              | variable_dec_aux : COMMA ID variable_dec_2\n              | print_statute : PRINT L_PAR operation R_PAR END_LINEassign_statute : L_BRACKET exp R_BRACKET\n                     | assign_statute_aux : operationoperation : expression operation_auxoperation_aux : AO_OPERATOR operation\n                    | expression : exp expression_auxexpression_aux : LOGIC_OPERATOR exp\n                    | factor : L_PAR expression R_PAR\n                | const_var\n                | AS_OPERATOR const_varexp : term exp_auxexp_aux : AS_OPERATOR exp\n              | term : factor term_auxterm_aux : MD_OPERATOR term\n                  | while_statute : WHILE L_PAR operation while_init BRACES code_statute while_endwhile_init : R_PARwhile_end : BRACESdo_while_statute : DO do_while_init code_statute BRACES WHILE L_PAR operation do_while_enddo_while_init : BRACESdo_while_end : R_PARif_statute : IF L_PAR operation if_init BRACES code_statute BRACES if_statute_auxif_statute_aux : else_statute BRACES code_statute BRACES\n             | else_statute : ELSEinput_statute : INPUT L_PAR type R_PAR END_LINEconst_var : const_int\n                   | const_float\n                   | const_boolean\n                   | const_idconst_int : INTconst_float : FLOATconst_boolean : BOOLEANconst_id : ID const_id_2const_id_2 : L_BRACKET exp R_BRACKET\n                    | L_PAR const_id_3 R_PAR\n                    | const_id_3 : const_var const_id_aux\n                    | const_id_aux : COMMA const_id_3\n                    | type : TYPE_INT\n            | TYPE_FLOAT\n            | TYPE_BOOLEAN\n            | TYPE_VOIDif_init : R_PAR'
    
_lr_action_items = {'DO':([11,23,25,28,30,31,32,52,53,54,55,62,90,110,113,132,134,136,137,139,148,149,151,152,153,154,155,158,160,],[20,-11,-13,-12,20,-9,-33,-29,20,20,-62,-10,-14,-17,-16,20,-39,-18,-15,20,-58,-60,-66,-61,-63,-68,-64,20,-65,]),'TYPE_INT':([0,11,14,15,17,18,23,25,28,30,31,32,52,53,54,55,62,90,110,113,122,123,130,132,134,135,136,137,139,148,149,151,152,153,154,155,158,160,],[1,1,1,-6,1,-5,-11,-13,-12,1,-9,-33,-29,1,1,-62,-10,-14,-17,-16,-28,1,-19,1,-39,1,-18,-15,1,-58,-60,-66,-61,-63,-68,-64,1,-65,]),'RETURN':([23,25,28,30,31,32,52,53,62,65,81,90,110,113,134,136,137,148,149,151,152,153,154,155,160,],[-11,-13,-12,-8,-9,-33,-29,-8,-10,-7,102,-14,-17,-16,-39,-18,-15,-58,-60,-66,-61,-63,-68,-64,-65,]),'MD_OPERATOR':([38,39,41,43,44,46,47,48,49,50,72,78,98,126,127,],[-74,-69,-71,-75,-50,76,-73,-70,-79,-72,-51,-76,-49,-78,-77,]),'R_BRACKET':([37,38,39,41,43,44,45,46,47,48,49,50,71,72,77,78,89,95,98,99,101,124,126,127,],[-54,-74,-69,-71,-75,-50,75,-57,-73,-70,-79,-72,-52,-51,-55,-76,118,-53,-49,-56,127,141,-78,-77,]),'WHILE':([11,23,25,28,30,31,32,52,53,54,55,62,90,104,110,113,132,134,136,137,139,148,149,151,152,153,154,155,158,160,],[22,-11,-13,-12,22,-9,-33,-29,22,22,-62,-10,-14,131,-17,-16,22,-39,-18,-15,22,-58,-60,-66,-61,-63,-68,-64,22,-65,]),'R_PAR':([1,2,5,7,14,35,37,38,39,41,43,44,46,47,48,49,50,60,68,69,71,72,73,74,77,78,79,83,84,85,87,88,91,93,95,96,98,99,100,108,116,117,121,122,123,125,126,127,133,138,140,141,145,147,],[-84,-85,-86,-87,-22,67,-54,-74,-69,-71,-75,-50,-57,-73,-70,-79,-72,-81,-26,-27,-52,-51,-48,98,-55,-76,-81,106,-45,109,115,-83,120,-24,-53,-46,-49,-56,126,-43,-80,-81,-21,-28,-22,-47,-78,-77,-44,-82,-23,-25,150,153,]),'PRINT':([11,23,25,28,30,31,32,52,53,54,55,62,90,110,113,132,134,136,137,139,148,149,151,152,153,154,155,158,160,],[24,-11,-13,-12,24,-9,-33,-29,24,24,-62,-10,-14,-17,-16,24,-39,-18,-15,24,-58,-60,-66,-61,-63,-68,-64,24,-65,]),'TYPE_VOID':([0,11,14,15,17,18,23,25,28,30,31,32,52,53,54,55,62,90,110,113,122,123,130,132,134,135,136,137,139,148,149,151,152,153,154,155,158,160,],[7,7,7,-6,7,-5,-11,-13,-12,7,-9,-33,-29,7,7,-62,-10,-14,-17,-16,-28,7,-19,7,-39,7,-18,-15,7,-58,-60,-66,-61,-63,-68,-64,7,-65,]),'COMMA':([10,13,38,39,41,43,47,48,49,50,63,66,68,69,75,78,88,93,126,127,141,],[-36,33,-74,-69,-71,-75,-73,-70,-79,-72,-36,-36,-26,-27,-35,-76,117,122,-78,-77,-25,]),'L_BRACKET':([10,26,49,63,66,68,69,],[16,61,80,16,16,94,-27,]),'AS_OPERATOR':([16,37,38,39,41,42,43,44,46,47,48,49,50,57,58,61,64,70,72,76,77,78,80,86,94,97,98,99,107,126,127,143,],[40,70,-74,-69,-71,40,-75,-50,-57,-73,-70,-79,-72,40,40,40,40,40,-51,40,-55,-76,40,40,40,40,-49,-56,40,-78,-77,40,]),'ASSIGN':([26,59,118,],[-41,86,-40,]),'$end':([4,56,],[0,-1,]),'TYPE_BOOLEAN':([0,11,14,15,17,18,23,25,28,30,31,32,52,53,54,55,62,90,110,113,122,123,130,132,134,135,136,137,139,148,149,151,152,153,154,155,158,160,],[5,5,5,-6,5,-5,-11,-13,-12,5,-9,-33,-29,5,5,-62,-10,-14,-17,-16,-28,5,-19,5,-39,5,-18,-15,5,-58,-60,-66,-61,-63,-68,-64,5,-65,]),'ELSE':([151,],[156,]),'END_LINE':([10,12,13,34,37,38,39,41,43,44,46,47,48,49,50,63,66,71,72,73,75,77,78,84,92,95,96,98,99,102,108,109,111,114,115,125,126,127,128,129,133,150,],[-36,32,-38,-34,-54,-74,-69,-71,-75,-50,-57,-73,-70,-79,-72,-36,-36,-52,-51,-48,-35,-55,-76,-45,-37,-53,-46,-49,-56,-32,-43,134,-42,136,137,-47,-78,-77,-31,142,-44,154,]),'INPUT':([86,],[112,]),'ID':([1,2,5,6,7,11,16,23,25,27,28,30,31,32,33,36,40,42,52,53,54,55,57,58,60,61,62,64,70,76,79,80,86,90,94,97,102,107,110,113,117,132,134,136,137,139,143,148,149,151,152,153,154,155,158,160,],[-84,-85,-86,10,-87,26,49,-11,-13,63,-12,26,-9,-33,66,69,49,49,-29,26,26,-62,49,49,49,49,-10,49,49,49,49,49,49,-14,49,49,49,49,-17,-16,49,26,-39,-18,-15,26,49,-58,-60,-66,-61,-63,-68,-64,26,-65,]),'BRACES':([8,9,11,19,20,21,23,25,28,30,31,32,54,55,62,65,67,82,90,103,105,106,110,113,119,120,132,134,136,137,139,142,144,146,148,149,151,152,153,154,155,156,157,158,159,160,],[-2,11,-8,52,55,56,-11,-13,-12,-8,-9,-33,-8,-62,-10,-7,-20,104,-14,130,132,-59,-17,-16,139,-88,-8,-39,-18,-15,-8,-30,149,151,-58,-60,-66,-61,-63,-68,-64,-67,158,-8,160,-65,]),'IF':([11,23,25,28,30,31,32,52,53,54,55,62,90,110,113,132,134,136,137,139,148,149,151,152,153,154,155,158,160,],[29,-11,-13,-12,29,-9,-33,-29,29,29,-62,-10,-14,-17,-16,29,-39,-18,-15,29,-58,-60,-66,-61,-63,-68,-64,29,-65,]),'LOGIC_OPERATOR':([37,38,39,41,43,44,46,47,48,49,50,71,72,73,77,78,95,98,99,126,127,],[-54,-74,-69,-71,-75,-50,-57,-73,-70,-79,-72,-52,-51,97,-55,-76,-53,-49,-56,-78,-77,]),'INT':([16,40,42,57,58,60,61,64,70,76,79,80,86,94,97,102,107,117,143,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'FLOAT':([16,40,42,57,58,60,61,64,70,76,79,80,86,94,97,102,107,117,143,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'L_PAR':([10,16,22,24,26,29,42,49,57,58,61,64,70,76,80,86,94,97,107,112,131,143,],[14,42,57,58,60,64,42,79,42,42,42,42,42,42,42,42,42,42,42,135,143,42,]),'BOOLEAN':([16,40,42,57,58,60,61,64,70,76,79,80,86,94,97,102,107,117,143,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'AO_OPERATOR':([37,38,39,41,43,44,46,47,48,49,50,71,72,73,77,78,84,95,96,98,99,125,126,127,],[-54,-74,-69,-71,-75,-50,-57,-73,-70,-79,-72,-52,-51,-48,-55,-76,107,-53,-46,-49,-56,-47,-78,-77,]),'MAIN':([0,3,15,17,18,32,51,130,],[-4,8,-6,-4,-5,-33,-3,-19,]),'TYPE_FLOAT':([0,11,14,15,17,18,23,25,28,30,31,32,52,53,54,55,62,90,110,113,122,123,130,132,134,135,136,137,139,148,149,151,152,153,154,155,158,160,],[2,2,2,-6,2,-5,-11,-13,-12,2,-9,-33,-29,2,2,-62,-10,-14,-17,-16,-28,2,-19,2,-39,2,-18,-15,2,-58,-60,-66,-61,-63,-68,-64,2,-65,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'while_end':([144,],[148,]),'do_while_end':([147,],[152,]),'const_id_2':([49,],[78,]),'inicioMain':([3,],[9,]),'input_statute':([86,],[110,]),'const_var':([16,40,42,57,58,60,61,64,70,76,79,80,86,94,97,102,107,117,143,],[44,72,44,44,44,88,44,44,44,44,88,44,44,44,44,128,44,88,44,]),'expression_aux':([73,],[96,]),'if_statute':([11,30,53,54,132,139,158,],[23,23,23,23,23,23,23,]),'operation':([57,58,64,86,107,143,],[83,85,91,111,133,147,]),'const_boolean':([16,40,42,57,58,60,61,64,70,76,79,80,86,94,97,102,107,117,143,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'return_statute_aux':([102,],[129,]),'param_aux':([93,],[123,]),'if_init':([91,],[119,]),'function_id_3':([93,],[121,]),'code_statute':([11,30,53,54,132,139,158,],[21,65,81,82,144,146,159,]),'do_while_statute':([11,30,53,54,132,139,158,],[25,25,25,25,25,25,25,]),'program_2':([0,17,],[3,51,]),'program':([0,],[4,]),'while_init':([83,],[105,]),'factor':([16,42,57,58,61,64,70,76,80,86,94,97,107,143,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'else_statute':([151,],[157,]),'params_id':([36,],[68,]),'type':([0,11,14,17,30,53,54,123,132,135,139,158,],[6,27,36,6,27,27,27,36,27,145,27,27,]),'do_while_init':([20,],[54,]),'statute':([11,30,53,54,132,139,158,],[30,30,30,30,30,30,30,]),'if_statute_aux':([151,],[155,]),'function_dec':([10,],[15,]),'operation_aux':([84,],[108,]),'return_statute':([81,],[103,]),'program_aux':([10,],[17,]),'function_call':([19,],[53,]),'const_int':([16,40,42,57,58,60,61,64,70,76,79,80,86,94,97,102,107,117,143,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'function_id':([10,],[19,]),'while_statute':([11,30,53,54,132,139,158,],[28,28,28,28,28,28,28,]),'variable_dec_2':([10,63,66,],[12,12,92,]),'variable_dec_3':([10,63,66,],[13,13,13,]),'term':([16,42,57,58,61,64,70,76,80,86,94,97,107,143,],[37,37,37,37,37,37,37,99,37,37,37,37,37,37,]),'function_id_aux':([68,],[93,]),'term_aux':([46,],[77,]),'statute_aux':([86,],[113,]),'statute_2':([26,],[62,]),'assign_statute':([26,],[59,]),'const_id_3':([60,79,117,],[87,100,138,]),'variable_dec_aux':([13,],[34,]),'assign_statute_aux':([86,],[114,]),'const_id_aux':([88,],[116,]),'function_id_2':([14,123,],[35,140,]),'print_statute':([11,30,53,54,132,139,158,],[31,31,31,31,31,31,31,]),'variable_dec':([10,63,],[18,90,]),'exp':([16,42,57,58,61,64,70,80,86,94,97,107,143,],[45,73,73,73,89,73,95,101,73,124,125,73,73,]),'const_float':([16,40,42,57,58,60,61,64,70,76,79,80,86,94,97,102,107,117,143,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'const_id':([16,40,42,57,58,60,61,64,70,76,79,80,86,94,97,102,107,117,143,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'expression':([42,57,58,64,86,107,143,],[74,84,84,84,84,84,84,]),'exp_aux':([37,],[71,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program_2 inicioMain BRACES code_statute BRACES','program',5,'p_program','TelstarP.py',655),
  ('inicioMain -> MAIN','inicioMain',1,'p_inicioMain','TelstarP.py',701),
  ('program_2 -> type ID program_aux program_2','program_2',4,'p_program_2','TelstarP.py',706),
  ('program_2 -> <empty>','program_2',0,'p_program_2','TelstarP.py',707),
  ('program_aux -> variable_dec','program_aux',1,'p_program_aux','TelstarP.py',785),
  ('program_aux -> function_dec','program_aux',1,'p_program_aux','TelstarP.py',786),
  ('code_statute -> statute code_statute','code_statute',2,'p_code_statute','TelstarP.py',791),
  ('code_statute -> <empty>','code_statute',0,'p_code_statute','TelstarP.py',792),
  ('statute -> print_statute','statute',1,'p_statute','TelstarP.py',822),
  ('statute -> ID statute_2','statute',2,'p_statute','TelstarP.py',823),
  ('statute -> if_statute','statute',1,'p_statute','TelstarP.py',824),
  ('statute -> while_statute','statute',1,'p_statute','TelstarP.py',825),
  ('statute -> do_while_statute','statute',1,'p_statute','TelstarP.py',826),
  ('statute -> type ID variable_dec','statute',3,'p_statute','TelstarP.py',827),
  ('statute_2 -> L_PAR const_id_3 R_PAR END_LINE','statute_2',4,'p_statute_2','TelstarP.py',886),
  ('statute_2 -> assign_statute ASSIGN statute_aux','statute_2',3,'p_statute_2','TelstarP.py',887),
  ('statute_aux -> input_statute','statute_aux',1,'p_statute_aux','TelstarP.py',901),
  ('statute_aux -> assign_statute_aux END_LINE','statute_aux',2,'p_statute_aux','TelstarP.py',902),
  ('function_dec -> function_id function_call code_statute return_statute BRACES','function_dec',5,'p_function_dec','TelstarP.py',907),
  ('function_id -> L_PAR function_id_2 R_PAR','function_id',3,'p_function_id','TelstarP.py',920),
  ('function_id_2 -> type params_id function_id_aux function_id_3','function_id_2',4,'p_function_id_2','TelstarP.py',925),
  ('function_id_2 -> <empty>','function_id_2',0,'p_function_id_2','TelstarP.py',926),
  ('function_id_3 -> param_aux function_id_2','function_id_3',2,'p_function_id_3','TelstarP.py',936),
  ('function_id_3 -> <empty>','function_id_3',0,'p_function_id_3','TelstarP.py',937),
  ('function_id_aux -> L_BRACKET exp R_BRACKET','function_id_aux',3,'p_function_id_aux','TelstarP.py',945),
  ('function_id_aux -> <empty>','function_id_aux',0,'p_function_id_aux','TelstarP.py',946),
  ('params_id -> ID','params_id',1,'p_params_id','TelstarP.py',950),
  ('param_aux -> COMMA','param_aux',1,'p_param_aux','TelstarP.py',956),
  ('function_call -> BRACES','function_call',1,'p_function_call','TelstarP.py',960),
  ('return_statute -> RETURN return_statute_aux END_LINE','return_statute',3,'p_return_statute','TelstarP.py',965),
  ('return_statute_aux -> const_var','return_statute_aux',1,'p_return_statute_aux','TelstarP.py',969),
  ('return_statute_aux -> <empty>','return_statute_aux',0,'p_return_statute_aux','TelstarP.py',970),
  ('variable_dec -> variable_dec_2 END_LINE','variable_dec',2,'p_variable_dec','TelstarP.py',982),
  ('variable_dec_2 -> variable_dec_3 variable_dec_aux','variable_dec_2',2,'p_variable_dec_2','TelstarP.py',987),
  ('variable_dec_3 -> L_BRACKET exp R_BRACKET','variable_dec_3',3,'p_variable_dec_3','TelstarP.py',996),
  ('variable_dec_3 -> <empty>','variable_dec_3',0,'p_variable_dec_3','TelstarP.py',997),
  ('variable_dec_aux -> COMMA ID variable_dec_2','variable_dec_aux',3,'p_variable_dec_aux','TelstarP.py',1008),
  ('variable_dec_aux -> <empty>','variable_dec_aux',0,'p_variable_dec_aux','TelstarP.py',1009),
  ('print_statute -> PRINT L_PAR operation R_PAR END_LINE','print_statute',5,'p_print_statute','TelstarP.py',1023),
  ('assign_statute -> L_BRACKET exp R_BRACKET','assign_statute',3,'p_assign_statute','TelstarP.py',1035),
  ('assign_statute -> <empty>','assign_statute',0,'p_assign_statute','TelstarP.py',1036),
  ('assign_statute_aux -> operation','assign_statute_aux',1,'p_assign_statute_aux','TelstarP.py',1043),
  ('operation -> expression operation_aux','operation',2,'p_operation','TelstarP.py',1048),
  ('operation_aux -> AO_OPERATOR operation','operation_aux',2,'p_operation_aux','TelstarP.py',1081),
  ('operation_aux -> <empty>','operation_aux',0,'p_operation_aux','TelstarP.py',1082),
  ('expression -> exp expression_aux','expression',2,'p_expression','TelstarP.py',1089),
  ('expression_aux -> LOGIC_OPERATOR exp','expression_aux',2,'p_expression_aux','TelstarP.py',1135),
  ('expression_aux -> <empty>','expression_aux',0,'p_expression_aux','TelstarP.py',1136),
  ('factor -> L_PAR expression R_PAR','factor',3,'p_factor','TelstarP.py',1143),
  ('factor -> const_var','factor',1,'p_factor','TelstarP.py',1144),
  ('factor -> AS_OPERATOR const_var','factor',2,'p_factor','TelstarP.py',1145),
  ('exp -> term exp_aux','exp',2,'p_exp','TelstarP.py',1163),
  ('exp_aux -> AS_OPERATOR exp','exp_aux',2,'p_exp_aux','TelstarP.py',1196),
  ('exp_aux -> <empty>','exp_aux',0,'p_exp_aux','TelstarP.py',1197),
  ('term -> factor term_aux','term',2,'p_term','TelstarP.py',1204),
  ('term_aux -> MD_OPERATOR term','term_aux',2,'p_term_aux','TelstarP.py',1237),
  ('term_aux -> <empty>','term_aux',0,'p_term_aux','TelstarP.py',1238),
  ('while_statute -> WHILE L_PAR operation while_init BRACES code_statute while_end','while_statute',7,'p_while_statute','TelstarP.py',1245),
  ('while_init -> R_PAR','while_init',1,'p_while_init','TelstarP.py',1263),
  ('while_end -> BRACES','while_end',1,'p_while_end','TelstarP.py',1269),
  ('do_while_statute -> DO do_while_init code_statute BRACES WHILE L_PAR operation do_while_end','do_while_statute',8,'p_do_while_statute','TelstarP.py',1284),
  ('do_while_init -> BRACES','do_while_init',1,'p_do_while_init','TelstarP.py',1302),
  ('do_while_end -> R_PAR','do_while_end',1,'p_do_while_end','TelstarP.py',1308),
  ('if_statute -> IF L_PAR operation if_init BRACES code_statute BRACES if_statute_aux','if_statute',8,'p_if_statute','TelstarP.py',1323),
  ('if_statute_aux -> else_statute BRACES code_statute BRACES','if_statute_aux',4,'p_if_statute_aux','TelstarP.py',1346),
  ('if_statute_aux -> <empty>','if_statute_aux',0,'p_if_statute_aux','TelstarP.py',1347),
  ('else_statute -> ELSE','else_statute',1,'p_else_statute','TelstarP.py',1351),
  ('input_statute -> INPUT L_PAR type R_PAR END_LINE','input_statute',5,'p_input_statute','TelstarP.py',1361),
  ('const_var -> const_int','const_var',1,'p_const_var','TelstarP.py',1368),
  ('const_var -> const_float','const_var',1,'p_const_var','TelstarP.py',1369),
  ('const_var -> const_boolean','const_var',1,'p_const_var','TelstarP.py',1370),
  ('const_var -> const_id','const_var',1,'p_const_var','TelstarP.py',1371),
  ('const_int -> INT','const_int',1,'p_const_int','TelstarP.py',1377),
  ('const_float -> FLOAT','const_float',1,'p_const_float','TelstarP.py',1388),
  ('const_boolean -> BOOLEAN','const_boolean',1,'p_const_boolean','TelstarP.py',1399),
  ('const_id -> ID const_id_2','const_id',2,'p_const_id','TelstarP.py',1410),
  ('const_id_2 -> L_BRACKET exp R_BRACKET','const_id_2',3,'p_const_id_2','TelstarP.py',1443),
  ('const_id_2 -> L_PAR const_id_3 R_PAR','const_id_2',3,'p_const_id_2','TelstarP.py',1444),
  ('const_id_2 -> <empty>','const_id_2',0,'p_const_id_2','TelstarP.py',1445),
  ('const_id_3 -> const_var const_id_aux','const_id_3',2,'p_const_id_3','TelstarP.py',1454),
  ('const_id_3 -> <empty>','const_id_3',0,'p_const_id_3','TelstarP.py',1455),
  ('const_id_aux -> COMMA const_id_3','const_id_aux',2,'p_const_id_aux','TelstarP.py',1464),
  ('const_id_aux -> <empty>','const_id_aux',0,'p_const_id_aux','TelstarP.py',1465),
  ('type -> TYPE_INT','type',1,'p_type','TelstarP.py',1471),
  ('type -> TYPE_FLOAT','type',1,'p_type','TelstarP.py',1472),
  ('type -> TYPE_BOOLEAN','type',1,'p_type','TelstarP.py',1473),
  ('type -> TYPE_VOID','type',1,'p_type','TelstarP.py',1474),
  ('if_init -> R_PAR','if_init',1,'p_if_init','TelstarP.py',1479),
]
